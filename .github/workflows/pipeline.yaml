name: Infra create and Helm Deploy 

on:
  push:
    branches:
      - 'main'

jobs:
  infra:
    name: Infra create
    runs-on: ubuntu-latest

    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_DEFAULT_REGION}}

      - name: Validate the terraform syntax
        run: terraform Validate
        working-directory: infrastructure

      - name: Initialize the terraform resources
        run: terraform init -var-file=config.tfvars
        working-directory: infrastructure    

      - name: Plan the terraform resources
        run: terraform plan -var-file=config.tfvars
        working-directory: infrastructure   

      - name: Apply the terraform resources
        run: terraform apply -var-file=config.tfvars
        working-directory: infrastructure  

  
  build_and_deploy:
    name: Build and Deploy Application
    needs: infra
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_DEFAULT_REGION}}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: my-ecr-repo
          IMAGE_TAG: ${{ github.run_id }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        working-directory: infrastructure  
